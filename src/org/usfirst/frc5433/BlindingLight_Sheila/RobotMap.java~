// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5433.BlindingLight_Sheila;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar lift_LeftLift_Left_CanController;
    public static AnalogPotentiometer lift_LeftLift_Left_StringLift;
    public static DigitalInput lift_LeftLift_Left_LowerLimit;
    public static CANJaguar lift_RightLift_Right_CanController;
    public static AnalogPotentiometer lift_RightLift_Right_StringLift;
    public static DigitalInput lift_RightLift_Right_LowerLimit;
    public static Encoder drive_SystemEncoder_Front_Left;
    public static Encoder drive_SystemEncoder_Front_Right;
    public static Encoder drive_SystemEncoder_Rear_Left;
    public static Encoder drive_SystemEncoder_Rear_Right;
    public static SpeedController drive_SystemDrive_Front_Left;
    public static SpeedController drive_SystemDrive_Front_Right;
    public static SpeedController drive_SystemDrive_Rear_Left;
    public static SpeedController drive_SystemDrive_Rear_Right;
    public static RobotDrive drive_SystemRobotDrive41;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        lift_LeftLift_Left_CanController = new CANJaguar(2);
        
        
        lift_LeftLift_Left_StringLift = new AnalogPotentiometer(0, 1.0, 0.0);
        LiveWindow.addSensor("Lift_Left", "Lift_Left_StringLift", lift_LeftLift_Left_StringLift);
        
        lift_LeftLift_Left_LowerLimit = new DigitalInput(0);
        LiveWindow.addSensor("Lift_Left", "Lift_Left_LowerLimit", lift_LeftLift_Left_LowerLimit);
        
        lift_RightLift_Right_CanController = new CANJaguar(4);
        
        
        lift_RightLift_Right_StringLift = new AnalogPotentiometer(1, 1.0, 0.0);
        LiveWindow.addSensor("Lift_Right", "Lift_Right_StringLift", lift_RightLift_Right_StringLift);
        
        lift_RightLift_Right_LowerLimit = new DigitalInput(1);
        LiveWindow.addSensor("Lift_Right", "Lift_Right_LowerLimit", lift_RightLift_Right_LowerLimit);
        
        drive_SystemEncoder_Front_Left = new Encoder(2, 3, false, EncodingType.k4X);
        LiveWindow.addSensor("Drive_System", "Encoder_Front_Left", drive_SystemEncoder_Front_Left);
        drive_SystemEncoder_Front_Left.setDistancePerPulse(1.0);
        drive_SystemEncoder_Front_Left.setPIDSourceParameter(PIDSourceParameter.kRate);
        drive_SystemEncoder_Front_Right = new Encoder(4, 5, false, EncodingType.k4X);
        LiveWindow.addSensor("Drive_System", "Encoder_Front_Right", drive_SystemEncoder_Front_Right);
        drive_SystemEncoder_Front_Right.setDistancePerPulse(1.0);
        drive_SystemEncoder_Front_Right.setPIDSourceParameter(PIDSourceParameter.kRate);
        drive_SystemEncoder_Rear_Left = new Encoder(6, 7, false, EncodingType.k4X);
        LiveWindow.addSensor("Drive_System", "Encoder_Rear_Left", drive_SystemEncoder_Rear_Left);
        drive_SystemEncoder_Rear_Left.setDistancePerPulse(1.0);
        drive_SystemEncoder_Rear_Left.setPIDSourceParameter(PIDSourceParameter.kRate);
        drive_SystemEncoder_Rear_Right = new Encoder(8, 9, false, EncodingType.k4X);
        LiveWindow.addSensor("Drive_System", "Encoder_Rear_Right", drive_SystemEncoder_Rear_Right);
        drive_SystemEncoder_Rear_Right.setDistancePerPulse(1.0);
        drive_SystemEncoder_Rear_Right.setPIDSourceParameter(PIDSourceParameter.kRate);
        drive_SystemDrive_Front_Left = new Talon(0);
        LiveWindow.addActuator("Drive_System", "Drive_Front_Left", (Talon) drive_SystemDrive_Front_Left);
        
        drive_SystemDrive_Front_Right = new Talon(1);
        LiveWindow.addActuator("Drive_System", "Drive_Front_Right", (Talon) drive_SystemDrive_Front_Right);
        
        drive_SystemDrive_Rear_Left = new Talon(2);
        LiveWindow.addActuator("Drive_System", "Drive_Rear_Left", (Talon) drive_SystemDrive_Rear_Left);
        
        drive_SystemDrive_Rear_Right = new Talon(3);
        LiveWindow.addActuator("Drive_System", "Drive_Rear_Right", (Talon) drive_SystemDrive_Rear_Right);
        
        drive_SystemRobotDrive41 = new RobotDrive(drive_SystemDrive_Front_Left, drive_SystemDrive_Rear_Left,
              drive_SystemDrive_Front_Right, drive_SystemDrive_Rear_Right);
        
        drive_SystemRobotDrive41.setSafetyEnabled(true);
        drive_SystemRobotDrive41.setExpiration(0.1);
        drive_SystemRobotDrive41.setSensitivity(0.5);
        drive_SystemRobotDrive41.setMaxOutput(1.0);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
